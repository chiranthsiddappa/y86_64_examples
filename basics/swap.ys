.align 8
.pos 0x120
.quad 0x123
.pos 0x100
.quad 0x456

# Execution begins at address 0 
    .pos 0
INIT:
    irmovq stack, %rsp
    irmovq 0x120, %rdi # xp
    irmovq 0x123, %r9 
    rmmovq %r9, (%rdi)
    irmovq 0x100, %rsi # yp
    irmovq 0x456, %r9
    rmmovq %r9, (%rsi)
    call swap
    halt

swap:
   mrmovq    (%rdi), %rax  # t0 = *xp
   mrmovq    (%rsi), %rdx  # t1 = *yp
   rmmovq    %rdx, (%rdi)  # *xp = t1
   rmmovq    %rax, (%rsi)  # *yp = t0
   ret

# Stack starts here and grows to lower addresses
    .pos 0x220
stack:
